#!/usr/bin/python

# i3 config generator/switcher
# by Oliver Kraitschy
# http://okraits.de okraits@arcor.de

from os import path, getenv, listdir, system
from sys import argv

# global variables

# paths
SYSTEM_THEME_PATH = "/usr/share/j4-make-config-git/themes"
THEME_PATH = ""
i3_PATH = ""
i3_BASECONFIG = ""
i3_CONFIG = ""
# cli arguments
theme_name = ""
append_list = []
# flags
noTheme = False
restart = False
windowActive = False
barActive = False
# data variables
windowText = ""
barText = ""

def detectConfigDir():
	global i3_PATH
	if path.exists(getenv("HOME") + "/.i3/config.base"):
		i3_PATH = getenv("HOME") + "/.i3"
		return True
	if getenv("XDG_CONFIG_HOME") is not None:
		if path.exists(getenv("XDG_CONFIG_HOME") + "/i3/config.base"):
			i3_PATH = getenv("XDG_CONFIG_HOME") + "/i3"
			return True
	if path.exists(getenv("HOME") + "/.config/i3/config.base"):
		i3_PATH = getenv("HOME") + "/.config/i3"
		return True
	else:
		return False

def printUsageInfo():
	info = """i3 config generator/switcher\n
Usage:
======
Set a specific theme:
\tj4-make-config <theme-name>
Create config file without including a theme:
\tj4-make-config none
Append additional configuration from a file:
\tj4-make-config -a <file-name>
Restart i3 after creating the config file:
\tj4-make-config -r <theme-name>|none"""
	print(info)

def printThemeList():
	print("\nAvailable themes:")
	print("=================")
	print("\n".join(sorted(themes.keys())))

if __name__ == "__main__":
	# detect i3 configuration directory
	if not detectConfigDir():
		print("Error: i3 base config file could not be found.")
		exit(1)
	else:
		# set paths
		THEME_PATH = i3_PATH + "/themes"
		i3_BASECONFIG = i3_PATH + "/config.base"
		i3_CONFIG = i3_PATH + "/config"
		# fill themes dictionary with names and paths
		themes = {}
		try:
			if path.exists(SYSTEM_THEME_PATH):
				for theme in listdir(SYSTEM_THEME_PATH):
					themes[theme] = SYSTEM_THEME_PATH + "/" + theme
			if path.exists(THEME_PATH):
				for theme in listdir(THEME_PATH):
					themes[theme] = THEME_PATH + "/" + theme
		except (IOError, OSError):
			print("Error: No themes found.")
			exit(1)
	
	# check for possible cli arguments
	# -h / --help
	# <theme-name>
	# -r
	# -a <file-name>
	if (len(argv) == 1):
		# in the future we'll use the previously used options here
		print("Nothing to do.")
		exit(0)
	elif (argv[1] == "-h" or argv[1] == "--help"):
		# print usage info independent of argument count
		printUsageInfo()
		printThemeList()
		exit(0)
	elif (len(argv) == 2):
		# only theme-name given
		theme_name = argv[1]
	elif (len(argv) > 2):
		for i in range(1, len(argv)):
			if argv[i] == "-r":
				restart = True
			elif argv[i] == "-a":
				# add next argument to append_list
				try:
					append_list.append(argv[i+1])
				except IndexError:
					# wrong number of cli arguments
					printUsageInfo()
					printThemeList()
					exit(1)
			else:
				# if previous argument was not "-a"
				if argv[i-1] != "-a":
					# must be theme-name
					theme_name = argv[i]
	else:
		# wrong number of cli arguments
		printUsageInfo()
		printThemeList()
		exit(1)
	
	# we must not include a theme in the config file
	if theme_name == "none":
		noTheme = True
	
	if not noTheme:
		# try to open given filename
		try:
			themefile = open(themes[theme_name], "r")
		except (KeyError, IOError):
			print("Error: given theme does not exist.")
			printThemeList()
			exit(1)
		
		# read themefile, create section strings
		for line in themefile:
			if "$i3-theme-window" in line:
				windowActive = True
				barActive = False
			elif "$i3-theme-bar" in line:
				windowActive = False
				barActive = True
			else:
				if windowActive and not barActive:
					windowText += line
				elif not windowActive and barActive:
					barText += line
		themefile.close()
	
	# try to open i3 base config file
	try:
		basefile = open(i3_BASECONFIG, "r")
	except IOError:
		print("Error: i3 base config file could not be opened.")
		exit(1)
	
	# try to open i3 config file
	try:
		configfile = open(i3_CONFIG, "w")
	except IOError:
		print("Error: i3 config file could not be created.")
		exit(1)
	
	# read base config file, write content to config file
	# and insert theme config at the right place
	for line in basefile:
		if "$i3-theme-window" in line:
			if not noTheme:
				configfile.write(windowText)
		elif "$i3-theme-bar" in line:
			if not noTheme:
				configfile.write(barText)
		else:
			configfile.write(line)
	basefile.close()
	configfile.flush()
	configfile.close()

	if restart:
		system("i3-msg restart")
	
	exit(0)
